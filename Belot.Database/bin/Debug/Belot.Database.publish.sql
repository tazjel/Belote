/*
Deployment script for Belot.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Belot.Database"
:setvar DefaultFilePrefix "Belot.Database"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS2014\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS2014\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[T_GAME]...';


GO
CREATE TABLE [dbo].[T_GAME] (
    [GAME_ID]             INT      NOT NULL,
    [CREATED_AT]          DATETIME NOT NULL,
    [FINISHED_AT]         DATETIME NULL,
    [TEAM_A_RESULT]       INT      NOT NULL,
    [TEAM_B_RESULT]       INT      NOT NULL,
    [CURRENT_USER_FK]     INT      NOT NULL,
    [LAST_CARD_PLAYED_FK] INT      NULL,
    PRIMARY KEY CLUSTERED ([GAME_ID] ASC)
);


GO
PRINT N'Creating [dbo].[T_GAME_MODE_CARD_VALUE]...';


GO
CREATE TABLE [dbo].[T_GAME_MODE_CARD_VALUE] (
    [CARD_VALUE_ID] INT NOT NULL,
    [VALUE]         INT NOT NULL,
    [CARD_FK]       INT NOT NULL,
    [GAME_MODE_FK]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CARD_VALUE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[T_USER]...';


GO
CREATE TABLE [dbo].[T_USER] (
    [USER_ID]       INT            NOT NULL,
    [USERNAME]      NVARCHAR (50)  NOT NULL,
    [PASSWORD_HASH] NVARCHAR (MAX) NOT NULL,
    [EMAIL]         NVARCHAR (MAX) NOT NULL,
    [NAME]          NCHAR (20)     NOT NULL,
    PRIMARY KEY CLUSTERED ([USER_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TD_CARD]...';


GO
CREATE TABLE [dbo].[TD_CARD] (
    [CARD_ID]    INT           NOT NULL,
    [NAME]       NVARCHAR (25) NOT NULL,
    [IMAGE_PATH] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([CARD_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TD_GAME_MODE]...';


GO
CREATE TABLE [dbo].[TD_GAME_MODE] (
    [GAME_MODE_ID] INT           NOT NULL,
    [NAME]         NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([GAME_MODE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TM_GAME_MODE_CARD]...';


GO
CREATE TABLE [dbo].[TM_GAME_MODE_CARD] (
    [CARD_ID]      INT NOT NULL,
    [GAME_MODE_ID] INT NOT NULL,
    CONSTRAINT [PK_TM_GAME_MODE_CARD] PRIMARY KEY CLUSTERED ([CARD_ID] ASC, [GAME_MODE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TM_USER_CARD]...';


GO
CREATE TABLE [dbo].[TM_USER_CARD] (
    [USER_ID] INT NOT NULL,
    [CARD_ID] INT NOT NULL,
    CONSTRAINT [PK_TM_USER_CARD] PRIMARY KEY CLUSTERED ([USER_ID] ASC, [CARD_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TM_USER_GAME]...';


GO
CREATE TABLE [dbo].[TM_USER_GAME] (
    [USER_ID] INT NOT NULL,
    [GAME_ID] INT NOT NULL,
    CONSTRAINT [PK_TM_USER_GAME] PRIMARY KEY CLUSTERED ([USER_ID] ASC, [GAME_ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_T_GAME_LAST_CARD_PLAYED_TD_CARD]...';


GO
ALTER TABLE [dbo].[T_GAME]
    ADD CONSTRAINT [FK_T_GAME_LAST_CARD_PLAYED_TD_CARD] FOREIGN KEY ([LAST_CARD_PLAYED_FK]) REFERENCES [dbo].[TD_CARD] ([CARD_ID]);


GO
PRINT N'Creating [dbo].[FK_T_GAME_CURRENT_USER_T_USER]...';


GO
ALTER TABLE [dbo].[T_GAME]
    ADD CONSTRAINT [FK_T_GAME_CURRENT_USER_T_USER] FOREIGN KEY ([CURRENT_USER_FK]) REFERENCES [dbo].[T_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_T_GAME_MODE_CARD_CARD_TD_CARD]...';


GO
ALTER TABLE [dbo].[T_GAME_MODE_CARD_VALUE]
    ADD CONSTRAINT [FK_T_GAME_MODE_CARD_CARD_TD_CARD] FOREIGN KEY ([CARD_FK]) REFERENCES [dbo].[TD_CARD] ([CARD_ID]);


GO
PRINT N'Creating [dbo].[FK_T_GAME_MODE_CARD_GAME_MODE_TD_GAME_MODE]...';


GO
ALTER TABLE [dbo].[T_GAME_MODE_CARD_VALUE]
    ADD CONSTRAINT [FK_T_GAME_MODE_CARD_GAME_MODE_TD_GAME_MODE] FOREIGN KEY ([GAME_MODE_FK]) REFERENCES [dbo].[TD_GAME_MODE] ([GAME_MODE_ID]);


GO
PRINT N'Creating [dbo].[FK_TM_GAME_MODE_CARD_TD_GAME_MODE_GAME_MODE_ID]...';


GO
ALTER TABLE [dbo].[TM_GAME_MODE_CARD]
    ADD CONSTRAINT [FK_TM_GAME_MODE_CARD_TD_GAME_MODE_GAME_MODE_ID] FOREIGN KEY ([GAME_MODE_ID]) REFERENCES [dbo].[TD_GAME_MODE] ([GAME_MODE_ID]);


GO
PRINT N'Creating [dbo].[FK_TM_GAME_MODE_CARD_TD_CARD_CARD_ID]...';


GO
ALTER TABLE [dbo].[TM_GAME_MODE_CARD]
    ADD CONSTRAINT [FK_TM_GAME_MODE_CARD_TD_CARD_CARD_ID] FOREIGN KEY ([CARD_ID]) REFERENCES [dbo].[TD_CARD] ([CARD_ID]);


GO
PRINT N'Creating [dbo].[FK_TM_USER_CARD_T_CARD_CARD_ID]...';


GO
ALTER TABLE [dbo].[TM_USER_CARD]
    ADD CONSTRAINT [FK_TM_USER_CARD_T_CARD_CARD_ID] FOREIGN KEY ([CARD_ID]) REFERENCES [dbo].[TD_CARD] ([CARD_ID]);


GO
PRINT N'Creating [dbo].[FK_TM_USER_CARD_T_USER_USER_ID]...';


GO
ALTER TABLE [dbo].[TM_USER_CARD]
    ADD CONSTRAINT [FK_TM_USER_CARD_T_USER_USER_ID] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[T_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_TM_USER_GAME_T_GAME_GAME_ID]...';


GO
ALTER TABLE [dbo].[TM_USER_GAME]
    ADD CONSTRAINT [FK_TM_USER_GAME_T_GAME_GAME_ID] FOREIGN KEY ([GAME_ID]) REFERENCES [dbo].[T_GAME] ([GAME_ID]);


GO
PRINT N'Creating [dbo].[FK_TM_USER_GAME_T_USER_USER_ID]...';


GO
ALTER TABLE [dbo].[TM_USER_GAME]
    ADD CONSTRAINT [FK_TM_USER_GAME_T_USER_USER_ID] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[T_USER] ([USER_ID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f32d7ee3-be7d-4e36-90f9-8142964aeb1b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f32d7ee3-be7d-4e36-90f9-8142964aeb1b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ea0d62cf-52ab-4ab5-94fd-8614a9bfce73')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ea0d62cf-52ab-4ab5-94fd-8614a9bfce73')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0a627a3e-8aa0-47ba-adba-6216fe0b6342')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0a627a3e-8aa0-47ba-adba-6216fe0b6342')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2736ab6b-6451-4221-8867-2e81764c1c54')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2736ab6b-6451-4221-8867-2e81764c1c54')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'edd630e2-f468-4a7d-8f52-9b31dfde605d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('edd630e2-f468-4a7d-8f52-9b31dfde605d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2a6aaedb-7303-4fd8-93d5-fac4e8149832')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2a6aaedb-7303-4fd8-93d5-fac4e8149832')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8a234b8e-fc77-400c-b271-9d1cd1402c25')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8a234b8e-fc77-400c-b271-9d1cd1402c25')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7e584293-99aa-43fe-9be3-5c1631c1c711')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7e584293-99aa-43fe-9be3-5c1631c1c711')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7c0f7afe-cda4-4de5-ae34-111ef1c285e7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7c0f7afe-cda4-4de5-ae34-111ef1c285e7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1362c059-8309-42f6-ad1c-453111c9abed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1362c059-8309-42f6-ad1c-453111c9abed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3734d9d6-69a4-4d37-b46a-bb1eaacf8068')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3734d9d6-69a4-4d37-b46a-bb1eaacf8068')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4576880b-ba97-481f-b3a2-ffe2102cc57a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4576880b-ba97-481f-b3a2-ffe2102cc57a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0181bb59-3543-4ae4-b043-7036ff804554')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0181bb59-3543-4ae4-b043-7036ff804554')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ace85712-f3ed-43c0-ab01-143875563cb7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ace85712-f3ed-43c0-ab01-143875563cb7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '755486e7-6dd4-444f-8427-26311e36fc7a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('755486e7-6dd4-444f-8427-26311e36fc7a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f9bc4bf1-c298-4137-93a4-d9088bcb38c2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f9bc4bf1-c298-4137-93a4-d9088bcb38c2')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
