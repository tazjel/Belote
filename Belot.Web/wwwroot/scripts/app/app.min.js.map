{"version":3,"sources":["rootController.ts","configurations/applicationConfiguration.ts","configurations/interceptorsConfiguration.ts","configurations/routeConfiguration.ts","configurations/storageConfiguration.ts","constants/applicationConstants.ts","constants/settingsConstants.ts","controllers/errorController.ts","controllers/indexController.ts","controllers/account/loginController.ts","controllers/account/registerController.ts","controllers/homeController.ts","controllers/invitationConfirmController.ts","controllers/roomController.ts","directives/modalDirective.ts","filters/stringFormat.ts","models/account.ts","models/misc.ts","services/authInterceptorService.ts","services/authService.ts","services/errorInterceptorService.ts","services/hubService.ts","_all.ts","app.ts","models/error.ts","models/game.ts"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["/// <reference path=\"_all.ts\" />\r\n\r\nmodule Belot.Web {\r\n    'use strict';\r\n\r\n    export interface IRootScope extends angular.IRootScopeService {\r\n        controller: IRootController;\r\n    }\r\n\r\n    export interface IRootController {\r\n        showLogout: boolean;\r\n\r\n        logOut();\r\n        errorMessage(message: string, time: number);\r\n        errorMessage(message: string, time: number, errorList: string[]);\r\n        hasRemoteTokenRequestFailed(rejection: angular.IHttpPromiseCallbackArg<{}>): boolean;\r\n        isPasswordSending(rejection: angular.IHttpPromiseCallbackArg<{}>): boolean;\r\n    }\r\n\r\n    export class RootController implements IRootController {\r\n        private redirectedToLogin: boolean = false;\r\n\r\n        public showLogout: boolean;\r\n\r\n        constructor(private $rootScope: IRootScope,\r\n            private $state: angular.ui.IStateService,\r\n            private $uibModal: angular.ui.bootstrap.IModalService,\r\n            private authService: Services.IAuthService,\r\n            private belotServiceUrls: Constants.BelotServiceUrls,\r\n            private belotWebPaths: Constants.BelotWebPaths,\r\n            private belotViewPaths: Constants.BelotViewPaths) {\r\n            $rootScope.controller = this;\r\n\r\n            this.cofigureAuthService();\r\n            this.configureUnauthenticatedRedirect($rootScope);\r\n        }\r\n\r\n        public logOut() {\r\n            this.authService.logOut();\r\n            this.redirectToLogin();\r\n        }\r\n\r\n        public errorMessage(message: string, time: number, errorList: string[] = null) {\r\n            var modalInstance = this.$uibModal.open({\r\n                animation: true,\r\n                templateUrl: this.belotViewPaths.error,\r\n                controller: 'errorController',\r\n                size: 'md',\r\n                resolve: {\r\n                    message: function () {\r\n                        return message;\r\n                    },\r\n                    time: function () {\r\n                        return time;\r\n                    },\r\n                    errorList: function () {\r\n                        return errorList ? errorList : [];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        public hasRemoteTokenRequestFailed(rejection: angular.IHttpPromiseCallbackArg<{}>): boolean {\r\n            return rejection.status === 400\r\n                && rejection.config.url == this.belotServiceUrls.authenticationServiceUrl\r\n                && this.$state.current.name != this.belotWebPaths.accountLogin.state;\r\n        };\r\n\r\n        public isPasswordSending(rejection: angular.IHttpPromiseCallbackArg<{}>): boolean {\r\n            return rejection.config.url == this.belotServiceUrls.authenticationServiceUrl\r\n                && this.$state.current.name == this.belotWebPaths.accountLogin.state;\r\n        }\r\n\r\n        private redirectToLogin() {\r\n            this.$state.go(this.belotWebPaths.accountLogin.state);\r\n            this.redirectedToLogin = true;\r\n            setTimeout(() => {\r\n                this.redirectedToLogin = false;\r\n            }, 200);\r\n        }\r\n\r\n        private cofigureAuthService() {\r\n            this.authService.fillAuthData();\r\n        }\r\n\r\n        private configureUnauthenticatedRedirect($rootScope: IRootScope) {\r\n            $rootScope.$on('$stateChangeStart', this.onNewUrlState);\r\n        }\r\n\r\n        private onNewUrlState = (e: angular.IAngularEvent, toState: angular.ui.IState, toParams: angular.ui.IStateParams, fromState: angular.ui.IState, fromParams: angular.ui.IStateParams) => {\r\n            if (!this.authService.authentication.isAuth\r\n                && !this.redirectedToLogin\r\n                && toState.name != this.belotWebPaths.accountLogin.state\r\n                && toState.name != this.belotWebPaths.accountRegister.state) {\r\n                e.preventDefault();\r\n                this.redirectToLogin();\r\n            }\r\n            else {\r\n                this.showLogout = true;\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Configurations {\r\n    'use strict';\r\n    \r\n    //TODO: find interface\r\n    export function configureLoadingBar(cfpLoadingBarProvider: any) {\r\n        cfpLoadingBarProvider.includeSpinner = false;\r\n    }\r\n}\r\n\r\n\r\n","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Configurations {\r\n    'use strict';\r\n\r\n    export function confugreInterceptoprs($httpProvider: angular.IHttpProvider) {\r\n        $httpProvider.interceptors.push(Services.AuthInterceptorService.Factory);\r\n        $httpProvider.interceptors.push(Services.ErrorInterceptorService.Factory);\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Configurations {\r\n    'use strict';\r\n\r\n\r\n    export function configureRouting($stateProvider: angular.ui.IStateProvider,\r\n        $urlRouterProvider: angular.ui.IUrlRouterProvider,\r\n        $locationProvider: angular.ILocationProvider,\r\n        belotWebPaths: Constants.BelotWebPaths,\r\n        belotViewPaths: Constants.BelotWebPaths,\r\n        belotServiceUrls: Constants.BelotWebPaths) {\r\n\r\n        $stateProvider.state(belotWebPaths.home.state, {\r\n            url: belotWebPaths.home.url,\r\n            controller: \"homeController\",\r\n            templateUrl: belotViewPaths.home\r\n        });\r\n\r\n        $stateProvider.state(belotWebPaths.game.state, {\r\n            url: belotWebPaths.game.url,\r\n            controller: \"gameController\",\r\n            templateUrl: belotViewPaths.game,\r\n            params: {\r\n                game_id: 0,\r\n                service_url: null\r\n            }\r\n        });\r\n\r\n        $stateProvider.state(belotWebPaths.accountLogin.state, {\r\n            url: belotWebPaths.accountLogin.url,\r\n            controller: \"loginController\",\r\n            templateUrl: belotViewPaths.accountLogin\r\n        });\r\n\r\n        $stateProvider.state(belotWebPaths.accountRegister.state, {\r\n            url: belotWebPaths.accountRegister.url,\r\n            controller: \"account.registerController\",\r\n            templateUrl: belotViewPaths.accountRegister\r\n        });\r\n\r\n        $urlRouterProvider.otherwise(belotWebPaths.home.url);\r\n\r\n        // use the HTML5 History API\r\n        $locationProvider.html5Mode({\r\n            enabled: false,\r\n            requireBase: true\r\n        });\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Configurations {\r\n    'use strict';\r\n\r\n    export function configureLocalStorage(localStorageServiceProvider: angular.local.storage.ILocalStorageServiceProvider) {\r\n        localStorageServiceProvider\r\n            .setPrefix('belot-web')\r\n            .setStorageType('localStorage');\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Constants {\r\n    'use strict';\r\n\r\n    export class UrlState {\r\n        url: string;\r\n        state: string;\r\n    }\r\n\r\n    export class BelotWebPaths {\r\n        accountLogin: UrlState;\r\n        accountRegister: UrlState;\r\n        home: UrlState;\r\n        game: UrlState;\r\n        room: UrlState;\r\n\r\n        constructor() {\r\n            this.accountLogin = { url: '/login', state: 'login' };\r\n            this.accountRegister = { url: '/register', state: 'register' };\r\n            this.home = { url: '/home', state: 'home' };\r\n            this.game = { url: '/game/{game_id:int}/{service_url}', state: 'game' };\r\n            this.room = { url: '/room/{room_id:int}/{service_url}', state: 'room' };\r\n        }\r\n    }\r\n\r\n    export class BelotViewPaths {\r\n        shared: SharedViewPaths;\r\n        accountLogin: string;\r\n        accountRegister: string;\r\n        home: string\r\n        error: string;\r\n        invitationConfirm: string;\r\n        gameCreate: string;\r\n        game: string;\r\n        room: string;\r\n\r\n        constructor() {\r\n            this.shared = { modal: './views/shared/modalTemplate.html' };\r\n            this.accountLogin = './views/account/login.html';\r\n            this.accountRegister = './views/account/register.html';\r\n            this.home = './views/home.html';\r\n            this.error = './views/error.html';\r\n            this.invitationConfirm = './views/invitationConfirm.html';\r\n            this.gameCreate = './views/gameCreate.html';\r\n            this.game = './views/game.html';\r\n            this.room = './views/room.html';\r\n        }\r\n    }\r\n\r\n    export class SharedViewPaths {\r\n        modal: string\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Constants {\r\n    'use strict'\r\n\r\n    export class BelotSettings {\r\n        clientId: string;\r\n\r\n        constructor() {\r\n            this.clientId = '2261c0d1-3e69-4275-ad9a-3ab15bab0e3c';\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers {\r\n    'use strict';\r\n\r\n    export interface IErrorScope extends angular.IScope {\r\n        controller: IErrorController;\r\n    }\r\n\r\n    export interface IErrorController {\r\n        model: Belot.Web.Models.Misc.ErrorModel;\r\n        cancel: () => void;\r\n    }\r\n\r\n    export class ErrorController implements IErrorController {\r\n        static $inject = ['$scope', '$uibModalInstance', 'message', 'time', 'errorList'];\r\n\r\n        public model: Belot.Web.Models.Misc.ErrorModel;\r\n\r\n        constructor($scope: IErrorScope, private $uibModalInstance: angular.ui.bootstrap.IModalServiceInstance, message: string, time: number, errorList: string[]) {\r\n            $scope.controller = this;\r\n\r\n            this.scheduleCancel(time);\r\n            this.model = new Models.Misc.ErrorModel(message, errorList);\r\n        }\r\n\r\n        public cancel = () => {\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        private scheduleCancel(time: number) {\r\n            setTimeout(this.cancel, time);\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers {\r\n    'use strict';\r\n\r\n    export interface IIndexScope extends angular.IScope {\r\n        viewModel: IIndexController;\r\n    }\r\n\r\n    export interface IIndexController {\r\n        authentication: Models.Account.Authentication;\r\n        showLogout: boolean;\r\n\r\n        logOut(): void;\r\n    }\r\n\r\n    export class IndexController implements IIndexController {\r\n        static $inject = ['$scope', '$state', 'authService', 'belotWebPaths'];\r\n\r\n        public authentication: Models.Account.Authentication;\r\n        public showLogout: boolean;\r\n\r\n        constructor(private $scope: IIndexScope, private $state: angular.ui.IStateService, private authService: Services.IAuthService, private belotWebPaths: Constants.BelotWebPaths) {\r\n            $scope.viewModel = this;\r\n            this.showLogout = this.authService.authentication.isAuth;\r\n\r\n            this.authentication = authService.authentication;\r\n        }\r\n\r\n        private redirectToLogin() {\r\n            this.authService.logOut();\r\n            this.$state.go(this.belotWebPaths.accountLogin.state);\r\n        }\r\n\r\n        logOut() {\r\n            this.authService.logOut();\r\n        }\r\n    }\r\n}","/// <reference path=\"../../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers.Account {\r\n    'use strict';\r\n    import constants = Belot.Web.Constants;\r\n    import models = Belot.Web.Models.Account;\r\n\r\n    export interface ILoginScope extends angular.IScope {\r\n        controller: ILoginController;\r\n        loginForm: angular.IFormController;\r\n    }\r\n\r\n    export interface ILoginController {\r\n        errorMessage: string;\r\n        loginData: models.LoginData;\r\n        val: models.LoginValidation;\r\n        loginForm: angular.IFormController;\r\n\r\n        login(): void;\r\n    }\r\n\r\n    export class LoginController {\r\n        static $inject = ['$scope', '$state', 'authService', 'belotWebPaths'];\r\n\r\n        errorMessage: string;\r\n        loginData: models.LoginData;\r\n        val: models.LoginValidation;\r\n        loginForm: angular.IFormController;\r\n\r\n        constructor(private $scope: ILoginScope, private $state: angular.ui.IStateService, private authService: Services.IAuthService, private belotWebPaths: constants.BelotWebPaths) {\r\n            $scope.controller = this;\r\n\r\n            this.errorMessage = \"\";\r\n\r\n            this.loginData = {\r\n                userName: \"\",\r\n                password: \"\",\r\n                rememberMe: \"\"\r\n            };\r\n\r\n            this.val = {\r\n                usernameMinLength: 3,\r\n                usernameMaxLength: 100,\r\n                passwordMinLength: 6,\r\n                passwordMaxLength: 100\r\n            };\r\n        }\r\n\r\n        public login() {\r\n            this.errorMessage = \"\";\r\n\r\n            if (this.$scope.loginForm.$valid) {\r\n                this.authService.login(this.loginData).then(this.onLoginSucccess, this.onLoginFail);\r\n            }\r\n            else {\r\n                this.loginForm.$submitted = true;\r\n            }\r\n        }\r\n\r\n        private onLoginSucccess = (response: Models.Account.AuthorizedData) => {\r\n            this.$state.go(this.belotWebPaths.home.state);\r\n        }\r\n\r\n        private onLoginFail = (response: angular.IHttpPromiseCallbackArg<Models.Error.AuthError>) => {\r\n            if (response.data) {\r\n                this.errorMessage = response.data.error;\r\n            }\r\n\r\n            this.loginData.password = '';\r\n        }\r\n    }\r\n}","/// <reference path=\"../../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers.Account {\r\n    'use strict';\r\n    import constants = Belot.Web.Constants;\r\n    import models = Belot.Web.Models.Account;\r\n\r\n    export interface IRegisterScope extends angular.IScope {\r\n        controller: IRegisterController;\r\n        registerForm: angular.IFormController;\r\n    }\r\n\r\n    export interface IRegisterController {\r\n        errorMessage: string;\r\n        model: models.UserCreateModel;\r\n        repeatPassword: string;\r\n\r\n        register(): void;\r\n    }\r\n\r\n    export class RegisterController implements IRegisterController {\r\n        static $inject = ['$scope', '$state', 'authService', 'belotWebPaths'];\r\n\r\n        errorMessage: string;\r\n        model: models.UserCreateModel;\r\n        repeatPassword: string;\r\n\r\n        constructor(private $scope: IRegisterScope, private $state: angular.ui.IStateService, private authService: Services.IAuthService, public belotWebPaths: constants.BelotWebPaths) {\r\n            $scope.controller = this;\r\n\r\n            this.errorMessage = \"\";\r\n\r\n            this.model = {\r\n                username: \"\",\r\n                password: \"\"\r\n            };\r\n        }\r\n\r\n        public register() {\r\n            this.errorMessage = \"\";\r\n\r\n            if (this.$scope.registerForm.$valid) {\r\n                this.authService.register(this.model).then(this.onRegisterSucccess, this.onRegisterFail);\r\n            }\r\n            else {\r\n                this.$scope.registerForm.$submitted = true;\r\n            }\r\n        }\r\n\r\n        private onRegisterSucccess = (response: Models.Account.AuthorizedData) => {\r\n            this.$state.go(this.belotWebPaths.accountLogin.state);\r\n        }\r\n\r\n        private onRegisterFail = (response: angular.IHttpPromiseCallbackArg<Models.Error.BaseApiError>) => {\r\n            if (response.data) {\r\n                this.errorMessage = response.data.message;\r\n            }\r\n\r\n            this.model.password = '';\r\n            this.repeatPassword = '';\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers {\r\n    'use strict';\r\n\r\n    export interface IHomeScope extends angular.IScope {\r\n        controller: IHomeController;\r\n    }\r\n\r\n    export interface IHomeController {\r\n        belotWebPaths: Constants.BelotWebPaths;\r\n        users: Models.Account.UserListModel[];\r\n        hasInvitedSomeone: boolean;\r\n    }\r\n\r\n    export class HomeController implements IHomeController {\r\n        static $inject = ['$rootScope', '$scope', '$http', '$state', 'belotWebPaths', 'belotServiceUrls', 'belotViewPaths', 'Hub', '$uibModal', 'hubService', 'authService'];\r\n\r\n        private usersHub: ngSignalr.Hub;\r\n        private currentLocaleId: number;\r\n\r\n        public hasInvitedSomeone: boolean = false;\r\n        public users: Models.Account.UserListModel[];\r\n\r\n        constructor(private $rootScope: IRootScope, private $scope: IHomeScope,\r\n            private $http: angular.IHttpService, private $state: angular.ui.IStateService,\r\n            public belotWebPaths: Constants.BelotWebPaths, private belotServiceUrls: Constants.BelotServiceUrls, private belotViewPaths: Constants.BelotViewPaths,\r\n            private Hub: ngSignalr.HubFactory, private $uibModal: angular.ui.bootstrap.IModalService,\r\n            private hubService: Services.HubService, private authService: Services.IAuthService) {\r\n            $scope.controller = this;\r\n\r\n            //this.currentLocaleId = this.authService.authorizationData.getData().locale_id;\r\n            //this.createUsersHub();\r\n        }\r\n\r\n        /*\r\n        private createUsersHub(): void {\r\n            this.usersHub = this.hubService.startHub(\"UsersListHub\", {\r\n                rootPath: this.belotServiceUrls.authenticationServiceUrl + \"/signalr\",\r\n                logging: false,\r\n                listeners: {\r\n                    'setUsersList': this.setUsersList,\r\n                    'handleInvitation': this.handleInvitation,\r\n                    'handleRejection': this.handleRejection,\r\n                    'joinRoom': this.joinRoom\r\n                },\r\n                methods: ['InvitePlayer', 'AcceptInvitation', 'RejectInvitation']\r\n            });\r\n\r\n            this.$scope.$on('$stateChangeStart', () => {\r\n                this.usersHub.disconnect();\r\n            });\r\n        }\r\n        \r\n        */\r\n        private setUsersList = (users: Models.Account.UserListModel[]) => {\r\n            var currentUserName: string = this.authService.authorizationData.getData().user_name;\r\n            for (var i in users) {\r\n                if (users[i].Name == currentUserName) {\r\n                    users[i].Id = null;\r\n                }\r\n            }\r\n\r\n            this.users = users;\r\n            this.$scope.$apply();\r\n        }\r\n        // TODO: Move invitation to room controller\r\n        /*private invite(userId: string) {\r\n            this.hasInvitedSomeone = true;\r\n            this.createRoom(userId)\r\n                .then((result: angular.IHttpPromiseCallbackArg<number>) => {\r\n                    var roomId = result.data;\r\n                    this.usersHub.invoke('InvitePlayer', userId, roomId, this.currentLocaleId);\r\n                });\r\n        }\r\n        */\r\n\r\n        public createRoom(userId: string) {\r\n            var url: string = this.getUrlFromCsList(this.authService.authorizationData.getData().locale_urls);\r\n            this.$http.post<number>(url + \"/rooms\", userId)\r\n                .then((result: angular.IHttpPromiseCallbackArg<number>) => {\r\n                    var roomId = result.data;\r\n                    this.$state.go(this.belotWebPaths.room.state, roomId);\r\n                });\r\n        }\r\n\r\n        /*\r\n        private handleInvitation = (firstPlayer: Models.Account.UserListModel, roomId: string, firstLocaleId: number) => {\r\n            var modalInstance = this.$uibModal.open({\r\n                animation: true,\r\n                templateUrl: this.belotViewPaths.invitationConfirm,\r\n                controller: 'invitationConfirmController',\r\n                size: 'md',\r\n                backdrop: 'static',\r\n                keyboard: false,\r\n                resolve: {\r\n                    name: function () {\r\n                        return firstPlayer.Name\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(() => {\r\n                this.usersHub.invoke('AcceptInvitation', firstPlayer, roomId, firstLocaleId, this.currentLocaleId);\r\n            }, () => {\r\n                this.usersHub.invoke('RejectInvitation', firstPlayer);\r\n            });\r\n        }\r\n\r\n        private handleRejection = (secondPlayer: Models.Account.UserListModel) => {\r\n            this.$rootScope.controller.errorMessage(\"Поканата към \" + secondPlayer.Name + \" беше отказана.\", 10000);\r\n        }\r\n\r\n        private joinRoom = (roomId: number) => {\r\n            this.$state.go(this.belotWebPaths.room.state, roomId)\r\n        }\r\n\r\n        */\r\n\r\n        private getUrlFromCsList(csUrls: string): string {\r\n            var urls: string[] = csUrls.split(',');\r\n            var randomIdx: number = this.getRandomIntBetween(0, urls.length - 1);\r\n\r\n            return urls[randomIdx];\r\n        }\r\n\r\n        private getRandomIntBetween(min: number, max: number): number {\r\n            var randValue: string = (Math.random() * (max - min + 1)) + \"\";\r\n            return parseInt(randValue, 10) + min;\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers {\r\n    'use strict';\r\n\r\n    export interface IInvitationConfirmScope extends angular.IScope {\r\n        controller: IInvitationConfirmController;\r\n    }\r\n\r\n    export interface IInvitationConfirmController {\r\n        name: string;\r\n\r\n        cancel();\r\n        confirm();\r\n    }\r\n\r\n    export class InvitationConfirmController implements IInvitationConfirmController {\r\n        static $inject = ['$scope', '$uibModalInstance', 'name'];\r\n\r\n        constructor($scope: IInvitationConfirmScope, private $uibModalInstance: angular.ui.bootstrap.IModalServiceInstance, public name: string) {\r\n            $scope.controller = this;\r\n        }\r\n\r\n        public cancel() {\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        public confirm() {\r\n            this.$uibModalInstance.close();\r\n        };\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Controllers {\r\n    'use strict';\r\n\r\n    export interface IRoomScope extends angular.IScope {\r\n        controller: IRoomController;\r\n    }\r\n\r\n    export interface IRoomController {\r\n        belotWebPaths: Constants.BelotWebPaths;\r\n        users: Models.Account.UserListModel[];\r\n        playersInRoom: number;\r\n\r\n        startGame(): void;\r\n    }\r\n\r\n    export class RoomController implements IRoomController {\r\n        static $inject = ['$scope', '$state', 'authService', 'belotWebPaths'];\r\n\r\n        belotWebPaths: Constants.BelotWebPaths;\r\n        users: Models.Account.UserListModel[];\r\n        playersInRoom: number;\r\n\r\n        public startGame(){\r\n\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\nmodule Belot.Web.Directives {\r\n    'use strict';\r\n\r\n    export class ModalDirective {\r\n        static $inject = ['belotViewPaths'];\r\n\r\n        constructor(belotViewPaths: Constants.BelotViewPaths) {\r\n            var directive: angular.IDirective = <angular.IDirective>{};\r\n\r\n            directive.restrict = 'E';\r\n            directive.replace = true;\r\n            directive.transclude = true;\r\n            directive.templateUrl = belotViewPaths.shared.modal;\r\n            directive.link = function postLink(scope: IModalScope, element: HTMLElement, attrs: IModalAttrs) {\r\n                scope.title = attrs.title;\r\n            };\r\n\r\n            return directive;\r\n        }\r\n    }\r\n\r\n    export interface IModalScope extends angular.IScope {\r\n        title: string;\r\n    }\r\n\r\n    export interface IModalAttrs {\r\n        title: string;\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Filters {\r\n    'use strict';\r\n\r\n    //TODO: refactor\r\n    export function stringFormat() {\r\n        var s = arguments[0];\r\n        for (var i = 0; i < arguments.length - 1; i++) {\r\n            var reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\r\n            s = s.replace(reg, arguments[i + 1]);\r\n        }\r\n        return s;\r\n    };\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Models.Account {\r\n    'use strict';\r\n\r\n    export class LoginData {\r\n        userName: string;\r\n        password: string;\r\n        rememberMe: string;\r\n    }\r\n\r\n    export class UserCreateModel {\r\n        username: string;\r\n        password: string;\r\n    }\r\n\r\n    export class LoginValidation {\r\n        usernameMinLength: number;\r\n        usernameMaxLength: number;\r\n        passwordMinLength: number;\r\n        passwordMaxLength: number;\r\n    }\r\n\r\n    export class Authentication {\r\n        isAuth: boolean;\r\n        userName: string;\r\n        useRefreshTokens: boolean;\r\n    }\r\n\r\n    export class AuthorizedData {\r\n        access_token: string;\r\n        user_id: string;\r\n        user_name: string;\r\n        locale_id: number;\r\n        locale_urls: string;\r\n    }\r\n\r\n    export class UserListModel {\r\n        Id: string;\r\n        Name: string;\r\n    }\r\n\r\n    export class UserGameModel {\r\n        id: string;\r\n        name: string;\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Models.Misc {\r\n    'use strict';\r\n\r\n    export class ErrorModel {\r\n        constructor(public message: string, public errorList: string[]) {\r\n        }\r\n    }\r\n}\r\n\r\n","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Services {\r\n    'use strict';\r\n\r\n    export class AuthInterceptorService implements angular.IHttpInterceptor {\r\n        static $inject = ['$q', '$rootScope', '$injector', 'localStorageService', 'belotWebPaths'];\r\n\r\n        private static TOKEN_HEADERS: angular.IHttpRequestConfigHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\r\n\r\n        public authentication: Models.Account.Authentication;\r\n        public authorizationData: IAuthorizationData;\r\n\r\n        public static Factory($q: angular.IQService, $rootScope: IRootScope, $injector: angular.auto.IInjectorService, localStorageService: angular.local.storage.ILocalStorageService, belotWebPaths: Constants.BelotWebPaths): AuthInterceptorService {\r\n            return new AuthInterceptorService($q, $rootScope, $injector, localStorageService, belotWebPaths);\r\n        }\r\n\r\n        constructor(\r\n            private $q: angular.IQService,\r\n            private $rootScope: IRootScope,\r\n            private $injector: angular.auto.IInjectorService,\r\n            private localStorageService: angular.local.storage.ILocalStorageService,\r\n            private belotWebPaths: Constants.BelotWebPaths) {\r\n        }\r\n\r\n        public request = (config: angular.IRequestConfig) => {\r\n            config.headers = config.headers || {};\r\n\r\n            var authData = this.getAuthService().authorizationData.getData();\r\n            if (authData) {\r\n                config.headers['Authorization'] = 'Bearer ' + authData.access_token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        public responseError = (rejection: angular.IHttpPromiseCallbackArg<Models.Error.AuthError>): angular.IPromise<Models.Account.AuthorizedData> => {\r\n            if (rejection.status === 401 || this.$rootScope.controller.hasRemoteTokenRequestFailed(rejection)) {\r\n                this.redirectToLogin();\r\n            }\r\n\r\n            return this.$q.reject(rejection);\r\n        }\r\n\r\n        private retryRequest(config: angular.IRequestConfig, deferred: angular.IDeferred<Models.Account.AuthorizedData>) {\r\n            function successCallback(response) {\r\n                deferred.resolve(response);\r\n            }\r\n\r\n            function errorCallback(response) {\r\n                deferred.reject(response);\r\n            }\r\n\r\n            this.get$http()(config).then(successCallback, errorCallback);\r\n        }\r\n\r\n        private redirectToLogin() {\r\n            this.get$state().go(this.belotWebPaths.accountLogin.state);\r\n        }\r\n\r\n        private get$http(): angular.IHttpService {\r\n            return this.$injector.get<angular.IHttpService>('$http');\r\n        }\r\n\r\n        private getAuthService(): IAuthService {\r\n            return this.$injector.get<IAuthService>('authService');\r\n        }\r\n\r\n        private get$state(): angular.ui.IStateService {\r\n            return this.$injector.get<angular.ui.IStateService>('$state');\r\n        }\r\n\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Services {\r\n    'use strict';\r\n\r\n    export interface IAuthService {\r\n        authentication: Models.Account.Authentication;\r\n        authorizationData: IAuthorizationData;\r\n\r\n        login(loginData: Models.Account.LoginData): angular.IPromise<Models.Account.AuthorizedData>;\r\n        register(user: Models.Account.UserCreateModel): angular.IHttpPromise<any>;\r\n        logOut();\r\n        fillAuthData();\r\n    }\r\n\r\n    export interface IAuthorizationData {\r\n        getData(): Models.Account.AuthorizedData;\r\n        setData(data: Models.Account.AuthorizedData);\r\n        removeData();\r\n    }\r\n\r\n    export class AuthService implements IAuthService {\r\n        static $inject = ['$http', '$q', 'localStorageService', 'belotServiceUrls', 'belotSettings'];\r\n\r\n        private static TOKEN_HEADERS: angular.IHttpRequestConfigHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\r\n\r\n        private loginData: Models.Account.LoginData;\r\n\r\n        public authentication: Models.Account.Authentication;\r\n        public authorizationData: IAuthorizationData;\r\n\r\n        constructor(private $http: angular.IHttpService,\r\n            private $q: angular.IQService,\r\n            private localStorageService: angular.local.storage.ILocalStorageService,\r\n            private belotServiceUrls: Constants.BelotServiceUrls,\r\n            private belotSettings: Constants.BelotSettings) {\r\n            this.authorizationData = new AuthorizationData(localStorageService);\r\n            this.authentication = new Models.Account.Authentication();\r\n        }\r\n\r\n        public login(loginData: Models.Account.LoginData): angular.IPromise<Models.Account.AuthorizedData> {\r\n            this.loginData = loginData;\r\n            var data: string = \"grant_type=password&username=\" + loginData.userName + \"&password=\" + loginData.password + \"&client_id=\" + this.belotSettings.clientId;\r\n\r\n            return this.$http.post(this.belotServiceUrls.authenticationServiceUrl, data, { headers: AuthService.TOKEN_HEADERS })\r\n                .success(this.onLoginSuccess)\r\n                .error(this.onLoginFail);\r\n        }\r\n\r\n        public register(user: Models.Account.UserCreateModel): angular.IHttpPromise<any> {\r\n            return this.$http.post(this.belotServiceUrls.authenticationServiceUrl + \"/api/users\", user);\r\n        }\r\n\r\n        public logOut() {\r\n            this.authorizationData.removeData();\r\n\r\n            this.authentication.isAuth = false;\r\n            this.authentication.userName = \"\";\r\n            this.authentication.useRefreshTokens = false;\r\n        }\r\n\r\n        public fillAuthData() {\r\n            var authData = this.authorizationData.getData();\r\n            if (authData) {\r\n                this.authentication.isAuth = true;\r\n                this.authentication.userName = authData.user_name;\r\n                this.authentication.useRefreshTokens = true;\r\n            }\r\n        }\r\n\r\n        private onLoginSuccess = (response: Models.Account.AuthorizedData): Models.Account.AuthorizedData => {\r\n            response.user_name = this.loginData.userName;\r\n            this.authorizationData.setData(response);\r\n\r\n            this.authentication.isAuth = true;\r\n            this.authentication.userName = this.loginData.userName;\r\n            this.authentication.useRefreshTokens = false;\r\n\r\n            return response;\r\n        }\r\n\r\n        private onLoginFail = (response: Models.Account.AuthorizedData): void => {\r\n            this.logOut();\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    class AuthorizationData implements IAuthorizationData {\r\n        private static AUTH_DATA_KEY = 'authorizationData';\r\n\r\n        constructor(private localStorageService: angular.local.storage.ILocalStorageService) {\r\n        }\r\n\r\n        public getData(): Models.Account.AuthorizedData {\r\n            return this.localStorageService.get<Models.Account.AuthorizedData>(AuthorizationData.AUTH_DATA_KEY);\r\n        }\r\n\r\n        public setData(data: Models.Account.AuthorizedData) {\r\n            this.localStorageService.set(AuthorizationData.AUTH_DATA_KEY, data);\r\n        }\r\n        public removeData() {\r\n            this.localStorageService.remove(AuthorizationData.AUTH_DATA_KEY);\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Services {\r\n    'use strict';\r\n\r\n    export interface IErrorInterceptorService {\r\n        responseError(errorResponse: angular.IHttpPromiseCallbackArg<Models.Error.BaseApiError>);\r\n    }\r\n\r\n    export class ErrorInterceptorService implements IErrorInterceptorService {\r\n        static $inject = ['$q', '$rootScope'];\r\n\r\n        public static Factory($q: angular.IQService, $rootScope: IRootScope): ErrorInterceptorService {\r\n            return new ErrorInterceptorService($q, $rootScope);\r\n        }\r\n\r\n        constructor(private $q: angular.IQService, private $rootScope: IRootScope) {\r\n        }\r\n\r\n        public responseError = (errorResponse: angular.IHttpPromiseCallbackArg<Models.Error.BaseApiError>) => {\r\n            switch (errorResponse.status) {\r\n                case 401:\r\n                    break;\r\n                case 400:\r\n                    if (!this.$rootScope.controller.hasRemoteTokenRequestFailed(errorResponse)\r\n                        && !this.$rootScope.controller.isPasswordSending(errorResponse)) {\r\n\r\n                        this.handleBadRequest(errorResponse.data);\r\n                    }\r\n                    break;\r\n                case 409:\r\n                    if (errorResponse.data) {\r\n                        var message: string = errorResponse.data.message;\r\n                        var globalErrors: string[] = this.getGlobalErrors(errorResponse.data);\r\n\r\n                        this.showMessage(message, 12000, globalErrors);\r\n                        break;\r\n                    }\r\n                case 403:\r\n                case 500:\r\n                    if (errorResponse.data) {\r\n                        var globalErrors: string[] = this.getGlobalErrors(errorResponse.data);\r\n\r\n                        this.showMessage(errorResponse.data.message, 6000);\r\n                        break;\r\n                    }\r\n                default: {\r\n                    if (errorResponse.status > 0 && errorResponse.data) {\r\n                        var globalErrors: string[] = this.getGlobalErrors(errorResponse.data);\r\n\r\n                        this.showMessage('Код ' + errorResponse.status + ': ' + errorResponse.data.message, 6000, globalErrors);\r\n                    }\r\n                    else {\r\n                        this.showMessage(JSON.stringify(errorResponse), 6000);\r\n                    };\r\n                }\r\n            };\r\n\r\n            return this.$q.reject(errorResponse);\r\n        }\r\n\r\n        private handleBadRequest(badRequestResponse: Models.Error.BaseApiError) {\r\n            var message = this.getMessage(badRequestResponse);\r\n            var globalErrors: string[];\r\n\r\n            var badReq: Models.Error.BadRequestApiError = badRequestResponse as Models.Error.BadRequestApiError;\r\n            if (badReq.model_errors != null) {\r\n                globalErrors = this.getModelErrors(badReq);\r\n            }\r\n            else {\r\n                globalErrors = this.getGlobalErrors(badReq);\r\n            }\r\n\r\n            this.showMessage(message, 6000, globalErrors);\r\n        }\r\n\r\n        private showMessage(content: string, time: number, errorList: string[] = null) {\r\n            this.$rootScope.controller.errorMessage(content, time, errorList);\r\n        }\r\n\r\n        private getMessage(badRequestResponse: Models.Error.BaseApiError) {\r\n            if (badRequestResponse.message) {\r\n                return badRequestResponse.message;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        private getGlobalErrors(errorResponse: Models.Error.BaseApiError) {\r\n            return errorResponse.errors;\r\n        }\r\n\r\n        private getModelErrors(badRequestResponse: Models.Error.BadRequestApiError) {\r\n            if (badRequestResponse.model_errors && badRequestResponse.model_errors[\"\"]) {\r\n                return badRequestResponse.model_errors[\"\"].errors;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"../_all.ts\" />\r\n\r\nmodule Belot.Web.Services {\r\n    'use strict';\r\n\r\n    export interface IHubService {\r\n        startHub(hubName: string, options: ngSignalr.HubOptions): ngSignalr.Hub;\r\n    }\r\n\r\n    export class HubService implements IHubService {\r\n        static $inject = ['$state', 'belotWebPaths', 'authService', 'Hub'];\r\n\r\n        private hasConnectFailed: boolean = false;\r\n\r\n        public hub: ngSignalr.Hub;\r\n\r\n        constructor(private $state: angular.ui.IStateService,\r\n            public belotWebPaths: Constants.BelotWebPaths,\r\n            private authService: Services.AuthService,\r\n            private Hub: ngSignalr.HubFactory) {\r\n        }\r\n\r\n        startHub(hubName: string, options: ngSignalr.HubOptions): ngSignalr.Hub {\r\n            var authData: Models.Account.AuthorizedData = this.authService.authorizationData.getData();\r\n            var accessToken: string = authData != null ? authData.access_token : null;\r\n            if (!options.queryParams) {\r\n                options.queryParams = {};\r\n            }\r\n            options.queryParams['access_token'] = \"Bearer \" + accessToken;\r\n\r\n            this.hub = new this.Hub(hubName, options);\r\n            this.createHub();\r\n\r\n            return this.hub;\r\n        }\r\n\r\n        private createHub() {\r\n            this.hub.connect();\r\n            this.hub.connection.start()\r\n                .done(this.onHubConnectSuccess)\r\n                .fail(this.onHubConnectFail);\r\n        }\r\n\r\n        private onHubConnectSuccess = (response: JQueryPromise<any>) => {\r\n            console.log('Now connected, connection ID=' + this.hub.connection.id);\r\n        }\r\n\r\n        private onHubConnectFail = (promise: any) => {\r\n            if (promise.context.status == 401) {\r\n                this.redirectToLogin();\r\n            }\r\n\r\n            console.log('Could not connect');\r\n        }\r\n\r\n        private redirectToLogin() {\r\n            this.$state.go(this.belotWebPaths.accountLogin.state);\r\n        }\r\n    }\r\n}","/// <reference path=\"../tools/typings/jquery/jquery.d.ts\" />\r\n/// <reference path=\"../tools/typings/angularjs/angular.d.ts\" />\r\n/// <reference path=\"../tools/typings/angularjs/angular-ui-bootstrap.d.ts\" />\r\n/// <reference path=\"../tools/typings/angularjs/angular-ui-router.d.ts\" />\r\n/// <reference path=\"../tools/typings/angularjs/angular-local-storage.d.ts\" />\r\n/// <reference path=\"../tools/typings/angularjs/angular-loading-bar.d.ts\" />\r\n/// <reference path=\"../tools/typings/ladda/ladda.d.ts\" />\r\n/// <reference path=\"../tools/typings/signalr/signalr.d.ts\" />\r\n/// <reference path=\"../tools/typings/angular-signalr-hub/angular-signalr-hub.d.ts\" />\r\n/// <reference path=\"../tools/typings/custom/serviceUrlConstants.d.ts\" />\r\n\r\n/// <reference path=\"app.ts\" />\r\n/// <reference path=\"rootController.ts\" />\r\n\r\n/// <reference path=\"configurations/applicationConfiguration.ts\" />\r\n/// <reference path=\"configurations/interceptorsConfiguration.ts\" />\r\n/// <reference path=\"configurations/routeConfiguration.ts\" />\r\n/// <reference path=\"configurations/storageConfiguration.ts\" />\r\n\r\n/// <reference path=\"constants/applicationConstants.ts\" />\r\n/// <reference path=\"constants/settingsConstants.ts\" />\r\n\r\n/// <reference path=\"controllers/errorController.ts\" />\r\n/// <reference path=\"controllers/indexController.ts\" />\r\n/// <reference path=\"controllers/account/loginController.ts\" />\r\n/// <reference path=\"controllers/account/registerController.ts\" />\r\n/// <reference path=\"controllers/homeController.ts\" />\r\n/// <reference path=\"controllers/invitationConfirmController.ts\" />\r\n/// <reference path=\"controllers/roomController.ts\" />\r\n\r\n/// <reference path=\"directives/modalDirective.ts\" />\r\n\r\n/// <reference path=\"filters/stringFormat.ts\" />\r\n\r\n/// <reference path=\"models/account.ts\" />\r\n/// <reference path=\"models/misc.ts\" />\r\n\r\n/// <reference path=\"services/authInterceptorService.ts\" />\r\n/// <reference path=\"services/authService.ts\" />\r\n/// <reference path=\"services/errorInterceptorService.ts\" />\r\n/// <reference path=\"services/hubService.ts\" />","/// <reference path=\"_all.ts\" />\r\n\r\nmodule Belot.Web {\r\n    'use strict';\r\n\r\n    import Configurations = Belot.Web.Configurations;\r\n    import Constants = Belot.Web.Constants;\r\n    import Controllers = Belot.Web.Controllers;\r\n    import Directives = Belot.Web.Directives;\r\n    import Filters = Belot.Web.Filters;\r\n    import Services = Belot.Web.Services;\r\n\r\n    var app: angular.IModule = angular.module('belot-web',\r\n        ['ui.router', 'LocalStorageModule', 'angular-loading-bar', 'belot-web-service-url', 'ui.bootstrap', 'ng-file-model', 'SignalR'])\r\n        //constants\r\n        .constant('belotWebPaths', new Constants.BelotWebPaths())\r\n        .constant('belotViewPaths', new Constants.BelotViewPaths())\r\n        .constant('belotSettings', new Constants.BelotSettings())\r\n        //directives\r\n        .directive('modal', (belotViewPaths: Constants.BelotViewPaths) => new Directives.ModalDirective(belotViewPaths))\r\n        //filters\r\n        .filter('stringFormat', Filters.stringFormat)\r\n        //services\r\n        .service('authService', Services.AuthService)\r\n        .service('hubService', Services.HubService)\r\n        //controllers\r\n        .controller(\"errorController\", Controllers.ErrorController)\r\n        .controller(\"homeController\", Controllers.HomeController)\r\n        .controller(\"invitationConfirmController\", Controllers.InvitationConfirmController)\r\n        .controller(\"indexController\", Controllers.IndexController)\r\n        .controller(\"loginController\", Controllers.Account.LoginController)\r\n        .controller(\"account.registerController\", Controllers.Account.RegisterController)\r\n        //configuration\r\n        .config(['cfpLoadingBarProvider', Configurations.configureLoadingBar])\r\n        .config(['$httpProvider', Configurations.confugreInterceptoprs])\r\n        .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', 'belotWebPaths', 'belotViewPaths', 'belotServiceUrls', Configurations.configureRouting])\r\n        .config(['localStorageServiceProvider', Configurations.configureLocalStorage])\r\n        //custom initialization\r\n        .run(($rootScope: IRootScope, $state: angular.ui.IStateService, $uibModal: angular.ui.bootstrap.IModalService,\r\n            authService: Services.IAuthService, belotServiceUrls: Constants.BelotServiceUrls, belotWebPaths: Constants.BelotWebPaths,\r\n            belotViewPaths: Constants.BelotViewPaths) =>\r\n            initialize($rootScope, $state, $uibModal, authService, belotServiceUrls, belotWebPaths, belotViewPaths));\r\n\r\n    function initialize($rootScope: IRootScope, $state: angular.ui.IStateService, $uibModal: angular.ui.bootstrap.IModalService, authService: Services.IAuthService,\r\n        belotServiceUrls: Constants.BelotServiceUrls, belotWebPaths: Constants.BelotWebPaths, belotViewPaths: Constants.BelotViewPaths) {\r\n        $rootScope.controller = new RootController($rootScope, $state, $uibModal, authService, belotServiceUrls, belotWebPaths, belotViewPaths);\r\n    }\r\n}","module Belot.Web.Models.Error {\r\n    'use strict';\r\n\r\n    export class BaseApiError {\r\n        message: string;\r\n        errors: string[];\r\n    }\r\n\r\n    export class BadRequestApiError extends BaseApiError {\r\n        model_errors: { [propertyName: string]: BadRequest; };\r\n    }\r\n\r\n    export class AuthError {\r\n        error: string;\r\n    }\r\n\r\n    class BadRequest {\r\n        errors: string[];\r\n        exceptions: string[];\r\n    }\r\n}","module Belot.Web.Models.Game {\r\n    'use strict';\r\n\r\n    export class CreateRoomModel {\r\n        first_player_id: string;\r\n    }\r\n\r\n    export class CreateGameModel {\r\n        first_player_id: string;\r\n        second_player_id: string;\r\n        third_player_id: string;\r\n        fourth_player_id: string;\r\n    }\r\n}"],"sourceRoot":"/source/"}